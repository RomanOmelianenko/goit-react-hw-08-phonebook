{"version":3,"sources":["helpers/fade.js","views/LoginView/LoginView.module.css","views/RegisterView.js"],"names":["fade","initial","scale","animate","exit","transition","ease","duration","module","exports","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","isLoading","h2","className","styles","Header","variants","form","onSubmit","TaskEditor","TaskEditor_label","TaskEditor_input","type","onChange","variant","color","Button","Component","connect","authSelectors","getLoading","authOperations","register"],"mappings":"gJAOeA,IAPF,CACTC,QAAS,CAAEC,MAAO,GAClBC,QAAS,CAAED,MAAO,GAClBE,KAAM,CAAEF,MAAO,GACfG,WAAY,CAAEC,KAAM,UAAWC,SAAU,M,oBCH7CC,EAAOC,QAAU,CAAC,OAAS,0BAA0B,WAAa,8BAA8B,iBAAmB,oCAAoC,iBAAmB,oCAAoC,OAAS,0BAA0B,gBAAkB,qC,uLCoB7PC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAX,eAA2B,EAAKZ,QAChC,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,uDAGvC,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SACbW,EAAcD,KAAKF,MAAnBG,UAER,OACE,gCAEE,cAAC,IAAD,UACE,cAAC,IAAOC,GAAR,CACEC,UAAWC,IAAOC,OAClB5B,QAAQ,UACRE,QAAQ,UACRC,KAAK,OACLC,WAAW,aACXyB,SAAU9B,IANZ,iCAYF,cAAC,IAAD,UACE,eAAC,IAAO+B,KAAR,CACE9B,QAAQ,UACRE,QAAQ,UACRC,KAAK,OACLC,WAAW,aACXyB,SAAU9B,IACVgC,SAAUR,KAAKL,aACfQ,UAAWC,IAAOK,WAPpB,UASE,wBAAON,UAAWC,IAAOM,iBAAzB,iBAEA,uBACEP,UAAWC,IAAOO,iBAClBC,KAAK,OACLxB,KAAK,OACLK,MAAOL,EACPyB,SAAUb,KAAKT,kBAMnB,wBAAOY,UAAWC,IAAOM,iBAAzB,kBAEE,uBACEP,UAAWC,IAAOO,iBAClBC,KAAK,QACLxB,KAAK,QACLK,MAAOJ,EACPwB,SAAUb,KAAKT,kBAMnB,wBAAOY,UAAWC,IAAOM,iBAAzB,qBAEE,uBACEP,UAAWC,IAAOO,iBAClBC,KAAK,WACLxB,KAAK,WACLK,MAAOH,EACPuB,SAAUb,KAAKT,mBAMjBU,GACA,cAAC,IAAD,CAAQW,KAAK,SAASE,QAAQ,YAAYC,MAAM,UAAUZ,UAAWC,IAAOY,OAA5E,sBAKDf,GAAa,cAAC,IAAD,gB,GA7FGgB,aAgHZC,uBANS,SAAA/B,GACtB,MAAO,CACLc,UAAWkB,IAAcC,WAAWjC,MAIA,CAAEY,WAAYsB,IAAeC,UAAtDJ,CAAkEhC","file":"static/js/7.8de27610.chunk.js","sourcesContent":["const fade = {\r\n    initial: { scale: 0 },\r\n    animate: { scale: 1 },\r\n    exit: { scale: 0 },\r\n    transition: { ease: 'easeOut', duration: 0.3 },\r\n};\r\n\r\nexport default fade;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"LoginView_Header__1BaTG\",\"TaskEditor\":\"LoginView_TaskEditor__2B1bL\",\"TaskEditor_label\":\"LoginView_TaskEditor_label__3PW8u\",\"TaskEditor_input\":\"LoginView_TaskEditor_input__3DlqN\",\"Button\":\"LoginView_Button__2wdY4\",\"TaskEditorinput\":\"LoginView_TaskEditorinput__1wOeG\"};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport { authSelectors } from '../redux/auth';\r\nimport Loader from '../helpers/Loader/Loader';\r\nimport Button from '@material-ui/core/Button';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport fade from '../helpers/fade';\r\nimport styles from './LoginView/LoginView.module.css';\r\n\r\n// const styles = {\r\n//   form: {\r\n//     width: 320,\r\n//   },\r\n//   label: {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     padding: 4,\r\n//   },\r\n// };\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister({ ...this.state });\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n    const { isLoading } = this.props;\r\n\r\n    return (\r\n      <div >\r\n        {/* <h2 className={styles.Header}>Registration form</h2> */}\r\n        <AnimatePresence>\r\n          <motion.h2\r\n            className={styles.Header}\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            transition=\"transition\"\r\n            variants={fade}\r\n          >\r\n            Registration form\r\n          </motion.h2>\r\n        </AnimatePresence>\r\n\r\n        <AnimatePresence>\r\n          <motion.form\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            transition=\"transition\"\r\n            variants={fade}\r\n            onSubmit={this.handleSubmit}\r\n            className={styles.TaskEditor}\r\n          >\r\n            <label className={styles.TaskEditor_label}>\r\n            Name\r\n            <input\r\n              className={styles.TaskEditor_input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              // autoFocus=\"on\"\r\n              // autoComplete=\"off\"\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.TaskEditor_label}>\r\n            Email\r\n            <input\r\n              className={styles.TaskEditor_input}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n              // autoFocus=\"on\"\r\n              // autoComplete=\"off\"\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.TaskEditor_label}>\r\n            Password\r\n            <input\r\n              className={styles.TaskEditor_input}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n              // autoFocus=\"on\"\r\n              // autoComplete=\"off\"\r\n            />\r\n          </label>\r\n\r\n          {!isLoading && (\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={styles.Button}>\r\n              Register\r\n            </Button>\r\n          )}\r\n\r\n          {isLoading && <Loader/>}\r\n          </motion.form>\r\n        </AnimatePresence>\r\n        \r\n        {/* <form onSubmit={this.handleSubmit} className={styles.TaskEditor}> */}\r\n          \r\n\r\n        {/* </form> */}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: authSelectors.getLoading(state)\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, { onRegister: authOperations.register })(RegisterView);"],"sourceRoot":""}