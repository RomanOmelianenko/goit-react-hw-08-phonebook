{"version":3,"sources":["helpers/fade.js","views/LoginView/LoginView.module.css","views/LoginView/LoginView.js"],"names":["fade","initial","scale","animate","exit","transition","ease","duration","module","exports","LoginView","state","email","password","handleChange","target","name","value","setState","handleSubmit","e","preventDefault","props","onLogin","this","isLoading","h2","className","styles","Header","variants","form","TaskEditor","onSubmit","TaskEditor_label","TaskEditor_input","type","placeholder","onChange","variant","color","Button","Component","connect","authSelectors","getLoading","authOperations","logIn"],"mappings":"gJAOeA,IAPF,CACTC,QAAS,CAAEC,MAAO,GAClBC,QAAS,CAAED,MAAO,GAClBE,KAAM,CAAEF,MAAO,GACfG,WAAY,CAAEC,KAAM,UAAWC,SAAU,M,oBCH7CC,EAAOC,QAAU,CAAC,OAAS,0BAA0B,WAAa,8BAA8B,iBAAmB,oCAAoC,iBAAmB,oCAAoC,OAAS,0BAA0B,gBAAkB,qC,uLCoB7PC,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,QAAX,eAAwB,EAAKZ,QAC7B,EAAKO,SAAS,CAAEF,KAAM,GAAIJ,MAAO,GAAIC,SAAU,M,uDAGvC,IAAD,EACqBW,KAAKb,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SACPY,EAAcD,KAAKF,MAAnBG,UAER,OACE,gCAGE,cAAC,IAAD,UACE,cAAC,IAAOC,GAAR,CACEC,UAAWC,IAAOC,OAClB5B,QAAQ,UACRE,QAAQ,UACRC,KAAK,OACLC,WAAW,aACXyB,SAAU9B,IANZ,2DAYAyB,GACA,mCACE,cAAC,IAAD,UACE,eAAC,IAAOM,KAAR,CACEJ,UAAWC,IAAOI,WAClB/B,QAAQ,UACRE,QAAQ,UACRC,KAAK,OACLC,WAAW,aACXyB,SAAU9B,IACViC,SAAUT,KAAKL,aAPjB,UASE,wBAAOQ,UAAWC,IAAOM,iBAAzB,kBAEE,uBACEP,UAAWC,IAAOO,iBAClBC,KAAK,QACLpB,KAAK,QAELqB,YAAY,cACZpB,MAAOL,EACP0B,SAAUd,KAAKV,kBAInB,wBAAOa,UAAWC,IAAOM,iBAAzB,qBAEE,uBACEP,UAAWC,IAAOO,iBAClBC,KAAK,WACLpB,KAAK,WAELqB,YAAY,iBACZpB,MAAOJ,EACPyB,SAAUd,KAAKV,kBAInB,cAAC,IAAD,CACEsB,KAAK,SACLG,QAAQ,YACRC,MAAM,UACNb,UAAWC,IAAOa,OAJpB,0BAiBPhB,GAAa,cAAC,IAAD,W,GA7FEiB,aAyGTC,uBANS,SAAAhC,GACtB,MAAO,CACLc,UAAWmB,IAAcC,WAAWlC,MAIA,CAAEY,QAASuB,IAAeC,OAAnDJ,CAA4DjC","file":"static/js/6.d63fe119.chunk.js","sourcesContent":["const fade = {\r\n    initial: { scale: 0 },\r\n    animate: { scale: 1 },\r\n    exit: { scale: 0 },\r\n    transition: { ease: 'easeOut', duration: 0.3 },\r\n};\r\n\r\nexport default fade;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"LoginView_Header__1BaTG\",\"TaskEditor\":\"LoginView_TaskEditor__2B1bL\",\"TaskEditor_label\":\"LoginView_TaskEditor_label__3PW8u\",\"TaskEditor_input\":\"LoginView_TaskEditor_input__3DlqN\",\"Button\":\"LoginView_Button__2wdY4\",\"TaskEditorinput\":\"LoginView_TaskEditorinput__1wOeG\"};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from '../../redux/auth';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport Loader from '../../helpers/Loader/Loader';\r\nimport styles from './LoginView.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport fade from '../../helpers/fade';\r\n\r\n// const styles = {\r\n//   form: {\r\n//     width: 320,\r\n//   },\r\n//   label: {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     padding: 4,\r\n//   },\r\n// };\r\n\r\nclass LoginView extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onLogin({ ...this.state });\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n    const { isLoading } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {/* <h2 className={styles.Header}>Please, enter email and password for login</h2> */}\r\n\r\n        <AnimatePresence>\r\n          <motion.h2\r\n            className={styles.Header}\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            transition=\"transition\"\r\n            variants={fade}\r\n          >\r\n            Please, enter email and password for login\r\n          </motion.h2>\r\n        </AnimatePresence>\r\n\r\n        {!isLoading && (\r\n          <>\r\n            <AnimatePresence>\r\n              <motion.form\r\n                className={styles.TaskEditor}\r\n                initial=\"initial\"\r\n                animate=\"animate\"\r\n                exit=\"exit\"\r\n                transition=\"transition\"\r\n                variants={fade}\r\n                onSubmit={this.handleSubmit}\r\n              >\r\n                <label className={styles.TaskEditor_label}>\r\n                  Email\r\n                  <input\r\n                    className={styles.TaskEditor_input}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    // autoFocus=\"on\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n\r\n                <label className={styles.TaskEditor_label}>\r\n                    Password\r\n                  <input\r\n                    className={styles.TaskEditor_input}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    // autoFocus=\"on\"\r\n                    placeholder=\"Enter password\"\r\n                    value={password}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={styles.Button}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </motion.form>\r\n            </AnimatePresence>\r\n              \r\n            {/* <form onSubmit={this.handleSubmit} className={styles.TaskEditor}> */}\r\n              \r\n            {/* </form> */}\r\n          </>\r\n        )}\r\n\r\n        {isLoading && <Loader/>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: authSelectors.getLoading(state)\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, { onLogin: authOperations.logIn })(LoginView);"],"sourceRoot":""}