{"version":3,"sources":["redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/auth/authReducer.js","redux/auth/authActions.js","redux/contacts/contactsActions.js","components/hoc/withAuth.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/Header/Header.js","components/Layout/Layout.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","routes.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","authOperations","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","authSelectors","isLogIn","state","getUserName","user","name","initialUserState","email","createReducer","_","payload","combineReducers","actions","createAction","addContactRequest","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","showModalWarning","withAuth","WrappedComponent","props","connect","isLogged","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","inLogged","marginLeft","Layout","children","Component","component","routeProps","render","restricted","routes","path","label","lazy","private","App","this","onGetCurrentUser","fallback","map","route","contactsItems","contactsActions","action","filter","contact","id","modalWarning","loading","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","middleware","thunk","persistor","persistStore","ReactDom","document","querySelector"],"mappings":"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","file":"static/js/main.5bfe373c.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`; \r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = ''\r\n    },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n    axios\r\n        .post('/users/signup', credentials)\r\n        .then(response => {\r\n            token.set(response.data.token);\r\n            dispatch(authActions.registerSuccess(response.data));\r\n        })\r\n        .catch(error => dispatch(authActions.registerError(error.message)));\r\n};\r\n\r\nconst logIn = credentials => dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n    axios\r\n        .post('/users/login', credentials)\r\n        .then(response => {\r\n            token.set(response.data.token);\r\n            dispatch(authActions.loginSuccess(response.data))\r\n        })\r\n        .catch(error => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n\r\n    axios\r\n        .post('/users/logout')\r\n        .then(() => {\r\n            token.unset();\r\n            dispatch(authActions.logoutSuccess())\r\n        })\r\n        .catch(error => dispatch(authActions.logoutError(error.message)))\r\n};\r\n\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return\r\n    };\r\n\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest);\r\n\r\n    axios\r\n        .get('/users/current')\r\n        .then(({ data }) =>\r\n            dispatch(authActions.getCurrentUserSuccess(data)))\r\n        .catch(error => dispatch(authActions.getCurrentUserError(error.message)))\r\n};\r\n\r\nconst authOperations = {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    getCurrentUser\r\n};\r\n\r\nexport default authOperations;","const isLogIn = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst authSelectors = {\r\n    isLogIn, \r\n    getUserName\r\n};\r\n\r\nexport default authSelectors;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState, \r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null, \r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentContactRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentContactSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentContactError');\r\n\r\nconst actions = {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError\r\n};\r\n\r\nexport default actions;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst showModalWarning = createAction('contacts/modalWarning');\r\n\r\nconst actions = {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError,\r\n   \r\n    changeFilter,\r\n    showModalWarning\r\n};\r\n\r\nexport default actions;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst withAuth = WrappedComponent => {\r\n    function withAuth(props) {\r\n        return <WrappedComponent {...props} />\r\n    };\r\n\r\n    const mapStateToProps = state => ({\r\n        isLogged: authSelectors.isLogIn(state)\r\n    });\r\n\r\n    return connect(mapStateToProps)(withAuth); \r\n};\r\n\r\nexport default withAuth;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport withAuth from '../hoc/withAuth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isLogged }) => (\r\n  <nav>\r\n    <NavLink\r\n      to='/'\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    {isLogged && (\r\n      <NavLink\r\n        to='/contacts'\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink> \r\n    )}\r\n  </nav>\r\n);\r\n\r\nexport default withAuth(Navigation);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: ''\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to='/register'\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Register\r\n        </NavLink>\r\n    <NavLink\r\n      to='/login'\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Login\r\n        </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst Header = ({ inLogged }) => {\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n        {inLogged ? <UserMenu/> : <AuthNav/>}\r\n    </header>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  inLogged: authSelectors.isLogIn(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\nimport Header from '../Header/Header';\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '80vw',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    padding: '0 24px',\r\n  },\r\n};\r\n\r\nconst Layout = ({ children }) => (\r\n  <div style={styles.container}>\r\n    <Header />\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Layout;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport withAuth from '../hoc/withAuth';\r\n\r\nconst PrivateRoute = ({ component: Component, isLogged, ...routeProps }) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props => isLogged ? <Component {...props} /> : <Redirect to='/login' />}  \r\n    />\r\n);\r\n\r\nexport default withAuth(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport withAuth from '../hoc/withAuth';\r\n\r\nconst PublicRoute = ({ component: Component, isLogged,\r\n    restricted, ...routeProps }) => (  \r\n    <Route\r\n        {...routeProps}\r\n        render={props => {\r\n            return isLogged && restricted ? \r\n                (<Redirect to='/contacts' />) : (<Component {...props} />)\r\n            }\r\n        }\r\n    />\r\n);\r\n\r\nexport default withAuth(PublicRoute);","import { lazy } from 'react';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    label: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./views/HomeView')),\r\n    private: false,\r\n    restricted: false\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./views/RegisterView')),\r\n    private: false,\r\n    restricted: true\r\n  },\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./views/LoginView')),\r\n    private: false,\r\n    restricted: true\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./views/ContactsView')),\r\n    private: true,\r\n    restricted: false\r\n  },\r\n];\r\n\r\nexport default routes;","import React, { Component, Suspense } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Layout from './Layout/Layout';\r\nimport PrivateRoute from './Routes/PrivateRoute';\r\nimport PublicRoute from './Routes/PublicRoute';\r\nimport routes from '../routes';\r\nimport { authOperations } from '../redux/auth';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Layout>\r\n          <Suspense fallback={<h1>Loading...</h1>}>\r\n            <Switch>\r\n              {routes.map(route => {   \r\n                return route.private ?\r\n                  <PrivateRoute key={route.label} {...route} /> \r\n                  :\r\n                  <PublicRoute key={route.label} {...route} restricted={route.restricted} /> \r\n              })}\r\n            </Switch>\r\n          </Suspense>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    )\r\n  };\r\n};\r\n\r\nexport default connect(null, {onGetCurrentUser: authOperations.getCurrentUser})(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst onAddContact = (state, action) => {\r\n    return [...state, action.payload]\r\n};\r\nconst onRemoveContact = (state, action) => {\r\n    return state.filter(contact => contact.id !== action.payload)\r\n};\r\nconst onAddFilter = (state, action) => action.payload;\r\n\r\nconst onShowModal = (state, action) => {\r\n    return !state\r\n};\r\n\r\n\r\nconst contactsItems = createReducer([], {\r\n    [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,  \r\n    [contactsActions.addContactSuccess]: onAddContact,\r\n    [contactsActions.removeContactSuccess]: onRemoveContact\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [contactsActions.changeFilter]: onAddFilter\r\n});\r\n\r\nconst modalWarning = createReducer(false, {\r\n    [contactsActions.showModalWarning]: onShowModal\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n   \r\n    [contactsActions.addContactRequest]: () => true,\r\n    [contactsActions.addContactSuccess]: () => false,\r\n    [contactsActions.addContactError]: () => false,\r\n\r\n    [contactsActions.fetchContactsRequest]: () => true,\r\n    [contactsActions.fetchContactsSuccess]: () => false,\r\n    [contactsActions.fetchContactsError]: () => false,\r\n\r\n    [contactsActions.removeContactRequest]: () => true,\r\n    [contactsActions.removeContactSuccess]: () => false,\r\n    [contactsActions.removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    contactsItems,\r\n    filter,\r\n    modalWarning,\r\n    loading\r\n});","// import { configureStore } from '@reduxjs/toolkit';\r\n// import contactReducer from './contacts/contactsReducer';\r\n\r\n// const store = configureStore({\r\n//     reducer: {\r\n//         contacts: contactReducer\r\n//     },\r\n// });\r\n\r\n// export default store;\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist'; /* автоматически сохраняет куски redux state в ljcalstorage при обновлении этого state */\r\nimport storage from 'redux-persist/lib/storage';  /* ссылка по умолчанию на local storage */\r\nimport thunk from 'redux-thunk'\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\n// конфиг для redux-persist\r\nconst authPersistConfig = {\r\n  key: 'auth', /* возьми мне внутри всего стейта ключ auth и св-во whitelist(взять из всего обьекта одно (или несколько)) */\r\n  storage,                   /* свойство ['token'], blacklist - не сохранять 1 или несколько св-в из обьекта */\r\n  whitelist: ['token'],      /* blacklist: [a, d, r] - пример */\r\n};\r\n\r\n// export оригинальный стор - это для Provider\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    // auth: authReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\n// export результат вызова фун-и persistStore(store) из 'redux-persist' на самом store \r\nexport const persistor = persistStore(store); /* фун-я, которая оборачивает весь наш store и при первой загрузки */\r\n/* будет наполнять, она будет брать всё, что сохранила в local storage и инициализировать наш store этими даными */","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\n\nReactDom.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>   \n    </Provider>, document.querySelector('#root'));"],"sourceRoot":""}