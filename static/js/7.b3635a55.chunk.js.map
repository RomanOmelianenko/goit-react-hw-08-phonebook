{"version":3,"sources":["views/RegisterView.js"],"names":["styles","form","width","label","display","flexDirection","padding","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","style","type","onChange","Component","connect","authOperations","register"],"mappings":"uOAKMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,QAAS,IAIPC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAX,eAA2B,EAAKZ,QAChC,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,uDAGvC,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,gCACE,+CAEA,uBAAMW,SAAUD,KAAKL,aAAcO,MAAOvB,EAAOC,KAAjD,UACE,wBAAOsB,MAAOvB,EAAOG,MAArB,iBAEE,uBACEqB,KAAK,OACLf,KAAK,OACLK,MAAOL,EACPgB,SAAUJ,KAAKT,kBAInB,wBAAOW,MAAOvB,EAAOG,MAArB,kBAEE,uBACEqB,KAAK,QACLf,KAAK,QACLK,MAAOJ,EACPe,SAAUJ,KAAKT,kBAInB,wBAAOW,MAAOvB,EAAOG,MAArB,qBAEE,uBACEqB,KAAK,WACLf,KAAK,WACLK,MAAOH,EACPc,SAAUJ,KAAKT,kBAInB,wBAAQY,KAAK,SAAb,gC,GAxDiBE,aA+DZC,sBAAQ,KAAM,CAAEP,WAAYQ,IAAeC,UAA3CF,CAAuDpB","file":"static/js/7.b3635a55.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\n// import { authOperations } from '../redux/auth';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: 4,\r\n  },\r\n};\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister({ ...this.state });\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Register page</h1>\r\n\r\n        <form onSubmit={this.handleSubmit} style={styles.form}>\r\n          <label style={styles.label}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            Email\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            Password\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Register</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default connect(null, { onRegister: authOperations.register })(RegisterView);\r\n\r\n// const mapStateToprops = (state) => {\r\n//   return null\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   onRegister: authOperations.register\r\n// };\r\n\r\n// В connect первый параметр - mapStateToprops(если он не нужен ставиться null),\r\n// второй параметр - mapDispatchToProps"],"sourceRoot":""}